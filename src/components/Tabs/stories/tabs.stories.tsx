import type { Meta, StoryObj } from '@storybook/react'

import { Tabs } from '../src/tabs'
import '../assets/docs.css'

const meta = {
    title: 'Tabs',
    component: Tabs,
    parameters: {
        layout: 'centered'
    },
    tags: ['autodocs']
} satisfies Meta<typeof Tabs>

export default meta;
type Story = StoryObj<typeof meta>

export const Default: Story = {
    parameters: {
        docs: {
            description: {
                story: "El componente `Tabs` es un conjunto de secciones de contenido, conocidas como paneles de pesta√±as, que muestran un panel de contenido a la vez. Este componente est√° equipado con diversas propiedades que permiten su completa personalizaci√≥n. Adem√°s, incorpora diferentes atributos `aria` para garantizar su correcto funcionamiento en lectores de pantalla. Para su implementaci√≥n, solo necesitas importar el componente `<Tabs />`. Este incluye los componentes `<Tabs.TabList />`, `<Tabs.Tab />`, `<Tabs.TabPanels />` y `<Tabs.Panel />`, necesarios para su uso. Haz clic en `Show code` en la parte inferior para ver y utilizar este ejemplo."
            }
        }
    },
    args: {
        children: (
            <>
                <Tabs.TabList label='testing' orientation='horizontal' >
                    <Tabs.Tab>One</Tabs.Tab>
                    <Tabs.Tab>Two</Tabs.Tab>
                    <Tabs.Tab>Three</Tabs.Tab>
                </Tabs.TabList>
                <Tabs.TabPanels>
                    <Tabs.TabPanel>First panel 1Ô∏è‚É£</Tabs.TabPanel>
                    <Tabs.TabPanel>Second panel 2Ô∏è‚É£</Tabs.TabPanel>
                    <Tabs.TabPanel>Third panel 3Ô∏è‚É£</Tabs.TabPanel>
                </Tabs.TabPanels>
            </>
        )
    },
    render: (args) => (
        <Tabs {...args}></Tabs>
    )
}

export const WithADefaultIndex: Story = {
    parameters: {
        docs: {
            description: {
                story: "Con la propiedad `defaultIndex`, podemos decidir qu√© pesta√±a debe aparecer abierta al momento de mostrarse. Ten en cuenta que esta propiedad se maneja igual que las posiciones de un `Array`, por lo que el n√∫mero 0 corresponder√° a la primera pesta√±a del grupo, y as√≠ sucesivamente."
            }
        }
    },
    args: {
        ...Default.args,
        defaultIndex: 1
    }
}          

export const WithIcon: Story = {
    parameters: {
        docs: {
            description: {
                story: "Utilizando la propiedad `icon`, puedes pasarle cualquier string, SVG o HTML para ser colocado dentro del bot√≥n que abre la pesta√±a. Adem√°s, puedes personalizarlo dependiendo del estado de la pesta√±a. Ten en cuenta que este elemento estar√° dentro de una etiqueta `Button`, por lo que no debes pasarle otro `Button`."
            }
        }
    },
    args: {
        children: (
            <>
                <Tabs.TabList label='testing' orientation='horizontal' >
                    <Tabs.Tab icon={(isSelected) => isSelected ? 'ü•≥' : 'üò•' }>One</Tabs.Tab>
                    <Tabs.Tab>Two</Tabs.Tab>
                </Tabs.TabList>
                <Tabs.TabPanels>
                    <Tabs.TabPanel>First panel 1Ô∏è‚É£</Tabs.TabPanel>
                    <Tabs.TabPanel>Second panel 2Ô∏è‚É£</Tabs.TabPanel>
                </Tabs.TabPanels>
            </>
        )
    }
}

export const StylingSelected: Story = {
    parameters: {
        docs: {
            description: {
                story: "Si necesitas personalizar totalmente la apariencia del componente, puedes pasarle tus clases personalizadas de CSS a trav√©s de la propiedad `addClass`. Todos los componentes dentro de `<Tabs>` la aceptan. Adem√°s, puedes apoyarte en las propiedades `aria` para modificar el estilo del acorde√≥n dependiendo de su comportamiento. Por ejemplo, utilizando la propiedad `aria-selected='true'`, podemos cambiar los estilos del `<Tabs.Tab />` cuando est√© abierto."
            }
        }
    },
    args: {    
        children: (
            <>
                <Tabs.TabList label='testing' orientation='horizontal' >
                    <Tabs.Tab addClass="tab--selected">One</Tabs.Tab>
                    <Tabs.Tab>Two</Tabs.Tab>
                </Tabs.TabList>
                <Tabs.TabPanels>
                    <Tabs.TabPanel>First panel 1Ô∏è‚É£</Tabs.TabPanel>
                    <Tabs.TabPanel>Second panel 2Ô∏è‚É£</Tabs.TabPanel>
                </Tabs.TabPanels>
            </>
        )
    }
}